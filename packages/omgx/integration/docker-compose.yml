# TODO: Prefix all env vars with service name
# TODO: Allow specifing the image tag to use
version: "3"
services:
  # base service builder
  builder:
    image: omgx/builder:latest
    env_file: []
  # this is a helper service used because there's no official hardhat image
  l1_chain:
    image: omgx/hardhat:latest
    ports:
      # expose the service to the host for integration testing
      - ${L1CHAIN_HTTP_PORT:-9545}:8545
    env_file: []
  deployer:
    depends_on:
      - l1_chain
    image: omgx/deployer:latest
    entrypoint: ./deployer.sh
    environment:
      FRAUD_PROOF_WINDOW_SECONDS: 0
      L1_NODE_WEB3_URL: http://l1_chain:8545
      # these keys are hardhat's first 2 accounts, DO NOT use in production
      DEPLOYER_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      SEQUENCER_PRIVATE_KEY: "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
      # skip compilation when run in docker-compose, since the contracts
      # were already compiled in the builder step
      NO_COMPILE: 1
    ports:
      # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8080}:8081

  dtl:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: omgx/data-transport-layer:latest
    # override with the dtl script and the env vars required for it
    entrypoint: ./dtl.sh
    env_file:
      - ./../../..//ops/envs/dtl.env
    # set the rest of the env vars for the network whcih do not
    # depend on the docker-compose setup
    environment:
      # used for setting the address manager address
      URL: http://deployer:8081/addresses.json
      # connect to the 2 layers
      DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: http://l1_chain:8545
      DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://l2geth:8545
      DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 420
    ports:
      - ${DTL_PORT:-7878}:7878
  l2geth:
    depends_on:
      - l1_chain
      - deployer
    image: omgx/l2geth:latest
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth.sh
    env_file:
      - ./../../..//ops/envs/geth.env
    environment:
      ETH1_HTTP: http://l1_chain:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
      # used for getting the addresses
      URL: http://deployer:8081/addresses.json
      # connecting to the DTL
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
    ports:
      - ${L2GETH_HTTP_PORT:-8545}:8545
      - ${L2GETH_WS_PORT:-8546}:8546
  relayer:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: omgx/message-relayer:latest
    entrypoint: ./relayer.sh
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:8545
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://deployer:8081/addresses.json
      # a funded hardhat account
      L1_WALLET_KEY: "0xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97"
      RETRIES: 60
      POLLING_INTERVAL: 500
      GET_LOGS_INTERVAL: 500
    env_file: []
  batch_submitter:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: omgx/batch-submitter:latest
    entrypoint: ./batches.sh
    env_file:
      - ./../../..//ops/envs/batches.env
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:8545
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://deployer:8081/addresses.json
      SEQUENCER_PRIVATE_KEY: "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
  verifier:
    depends_on:
      - l1_chain
      - deployer
      - dtl
    image: omgx/l2geth:latest
    deploy:
      replicas: 0
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth.sh
    env_file:
      - ./../../..//ops/envs/geth.env
    environment:
      ETH1_HTTP: http://l1_chain:8545
      ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
      # used for getting the addresses
      URL: http://deployer:8081/addresses.json
      # connecting to the DTL
      ROLLUP_CLIENT_HTTP: http://dtl:7878
      ETH1_CTC_DEPLOYMENT_HEIGHT: 8
      RETRIES: 60
      IS_VERIFIER: "true"
    ports:
      - ${VERIFIER_HTTP_PORT:-8547}:8545
      - ${VERIFIER_WS_PORT:-8548}:8546
