name: integration omgx wallet

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - '*rc'
      - 'regenesis/*'
  pull_request:
  workflow_dispatch:

jobs:
  integration:
    runs-on: ubuntu-latest
    env:
        DOCKER_BUILDKIT: 1
        COMPOSE_DOCKER_CLI_BUILD: 1
    steps:
      # Monorepo tests
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build the services
        working-directory: ./ops
        run: ./scripts/build-ci.sh

      - name: Bring the stack up
        working-directory: ./ops
        run: docker-compose up -d

      - name: Run OMGX Wallet integration tests
        working-directory: ./ops/packages/omgx/wallet
        run: |
          docker ps
          ADDRESSES=$(curl --fail --show-error --silent --retry-connrefused --retry 60 --retry-delay 5 http://127.0.0.1:8080/addresses.json)
          export ADDRESS_MANAGER=$(echo $ADDRESSES | jq -r '.AddressManager')
          export PK1=$(docker logs ops_l1_chain_1 | grep -A 1 "Account #19" | head -n2 | awk 'FNR == 2 {print}' | awk '{print $3}')
          export PK2=$(docker logs ops_l1_chain_1 | grep -A 1 "Account #18" | head -n2 | awk 'FNR == 2 {print}' | awk '{print $3}')

          echo $ADDRESS_MANAGER
          echo $PK1
          echo $PK2
          ( echo "cat <<EOF" ; cat .env.example.local ; echo EOF ) | sh >> .env
          yarn install
          yarn build
          yarn deploy