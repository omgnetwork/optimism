name: Build containers

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - '*rc'
      - 'regenesis/*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        DOCKER_BUILDKIT: 1
        COMPOSE_DOCKER_CLI_BUILD: 1

    steps:
      # Monorepo tests
      - uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build the services
        working-directory: ./ops
        env:
          BUILD_DEPS: 0
        run: ./scripts/build-ci.sh

      - name: Artifact containers
        working-directory: ./ops
        env:
          BUILD_DEPS: 0
        run: |
          set -xe
          mkdir ~/docker/
          for i in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep -E '(ethereumoptimism|omgx)'); do
            NAME=$(echo $i | sed 's,/,_,g' | sed 's,:,_,g')
            EXPORT_PATH="~/docker/"$NAME".tar"
            EXPORT_PATH=${EXPORT_PATH/\~/$HOME}
            echo $EXPORT_PATH
            docker save -o $EXPORT_PATH $i &
            pids[index]=$!
            ((index=index+1))
            echo $!
          done
          # wait for all pids
          for pid in ${pids[*]}; do
            wait $pid
            echo 'Done waiting for '$pid
          done

      - name: Upload built containers
        uses: actions/upload-artifact@v2
        with:
          name: rollup-containers
          path: ~/docker/*
