# TODO: Prefix all env vars with service name
# TODO: Allow specifing the image tag to use
version: "3"

services:
  # base service builder
  builder:
    image: omgx/builder:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.monorepo

  # this is a helper service used because there's no official hardhat image
  l1_chain:
    image: omgx/hardhat:latest
    build:
      context: ./docker/hardhat
      dockerfile: Dockerfile
    ports:
        # expose the service to the host for integration testing
      - ${L1CHAIN_HTTP_PORT:-9545}:8545

  deployer:
    depends_on:
      - l1_chain
    image: omgx/deployer:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.deployer
    entrypoint: ./deployer.sh
    environment:
        FRAUD_PROOF_WINDOW_SECONDS: 0
        L1_NODE_WEB3_URL: http://l1_chain:8545
        CHAIN_ID: 28
        # these keys are hardhat's first accounts, DO NOT use in production
        DEPLOYER_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
        SEQUENCER_PRIVATE_KEY: "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
        PROPOSER_PRIVATE_KEY: "0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a"
        RELAYER_PRIVATE_KEY: "0xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97"
        # skip compilation when run in docker-compose, since the contracts
        # were already compiled in the builder step
        NO_COMPILE: 1
    ports:
        # expose the service to the host for getting the contract addrs
      - ${DEPLOYER_PORT:-8080}:8081

# deploys OMGX contracts and serves contract addresses

  omgx_deployer:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: omgx/omgx_deployer
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.omgx_deployer
    environment:
      SERVE_ONLY: 0 #if EQ 1, then do not deploy any contracts
      IF_SERVE_ONLY_EQ_1_THEN_SERVE: rinkeby #e.g. serve whatever is in /deployments/rinkeby - other choice is mainnet
      L1_NODE_WEB3_URL: http://l1_chain:8545
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://deployer:8081/addresses.json
      # DO NOT use in production
      DEPLOYER_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      RETRIES: 70
    ports:
        # expose the service to the host for getting the contract addrs
      - ${OMGX_DEPLOYER_PORT:-8078}:8079

  dtl:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: omgx/data-transport-layer:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.data-transport-layer
    # override with the dtl script and the env vars required for it
    entrypoint: ./dtl.sh
    env_file:
      -  ./envs/dtl.env
    # set the rest of the env vars for the network whcih do not
    # depend on the docker-compose setup
    environment:
        # used for setting the address manager address
        URL: http://deployer:8081/addresses.json
        # connect to the 2 layers
        DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: http://l1_chain:8545
        DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://l2geth:8545
        DATA_TRANSPORT_LAYER__SYNC_FROM_L2: 'true'
        DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 28
    ports:
      - ${DTL_PORT:-7878}:7878

  l2geth:
    depends_on:
      - l1_chain
      - deployer
    image: omgx/l2geth:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth
    # override with the geth script and the env vars required for it
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        ETH1_HTTP: http://l1_chain:8545
        ROLLUP_TIMESTAMP_REFRESH: 5s
        ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
        # used for getting the addresses
        URL: http://deployer:8081/addresses.json
        # connecting to the DTL
        ROLLUP_CLIENT_HTTP: http://dtl:7878
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
        CHAIN_ID: 28
    ports:
      - ${L2GETH_HTTP_PORT:-8545}:8545
      - ${L2GETH_WS_PORT:-8546}:8546

  relayer:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: omgx/message-relayer:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.message-relayer
    entrypoint: ./relayer.sh
    environment:
        L1_NODE_WEB3_URL: http://l1_chain:8545
        L2_NODE_WEB3_URL: http://l2geth:8545
        URL: http://deployer:8081/addresses.json
        # a funded hardhat account
        L1_WALLET_KEY: "0xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97"
        RETRIES: 60
        POLLING_INTERVAL: 500
        GET_LOGS_INTERVAL: 500
        FILTER_ENDPOINT: http://omgx_deployer:8079/addresses.json #this will fail early, but then start to work when the omgx_deployer comes up
        FILTER_POLLING_INTERVAL: 30000

# a second relay system for messages that need to get to L1 quickly
# NOTE - all withdrawal messenges use the standard relayer with its 7 day window

  omgx_message-relayer-fast:
    depends_on:
      - l1_chain
      - deployer
      - omgx_deployer
      - l2geth
    image: omgx/omgx_message-relayer-fast
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.omgx_message-relayer-fast
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:8545
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://deployer:8081/addresses.json
      OMGX_URL: http://omgx_deployer:8079/addresses.json
      # This is who pays for the fast message relayer
      L1_WALLET_KEY: "0xde9be858da4a475276426320d5e9262ecfc3ba460bfac56360bfa6c4c28b4ee0"
      RETRIES: 70
      POLLING_INTERVAL: 1500
      GET_LOGS_INTERVAL: 500
      FILTER_ENDPOINT: http://omgx_deployer:8079/addresses.json
      FILTER_POLLING_INTERVAL: 30000

  batch_submitter:
    depends_on:
      - l1_chain
      - deployer
      - l2geth
    image: omgx/batch-submitter:latest
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.batch-submitter
    entrypoint: ./batches.sh
    env_file:
      - ./envs/batches.env
    environment:
        L1_NODE_WEB3_URL: http://l1_chain:8545
        L2_NODE_WEB3_URL: http://l2geth:8545
        URL: http://deployer:8081/addresses.json
        SEQUENCER_PRIVATE_KEY: "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
        PROPOSER_PRIVATE_KEY: "0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a"

  verifier:
    depends_on:
      - l1_chain
      - deployer
      - dtl
    image: omgx/l2geth:latest
    deploy:
      replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        ETH1_HTTP: http://l1_chain:8545
        ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
        URL: http://deployer:8081/addresses.json
        ROLLUP_CLIENT_HTTP: http://dtl:7878
        ROLLUP_BACKEND: 'l1'
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
        ROLLUP_VERIFIER_ENABLE: 'true'
    ports:
      - ${VERIFIER_HTTP_PORT:-8547}:8545
      - ${VERIFIER_WS_PORT:-8548}:8546

  replica:
    depends_on:
      - dtl
    image: omgx/l2geth:latest
    deploy:
      replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.geth
    entrypoint: sh ./geth.sh
    env_file:
      - ./envs/geth.env
    environment:
        ETH1_HTTP: http://l1_chain:8545
        ROLLUP_STATE_DUMP_PATH: http://deployer:8081/state-dump.latest.json
        URL: http://deployer:8081/addresses.json
        ROLLUP_CLIENT_HTTP: http://dtl:7878
        ROLLUP_BACKEND: 'l2'
        ROLLUP_VERIFIER_ENABLE: 'true'
        ETH1_CTC_DEPLOYMENT_HEIGHT: 8
        RETRIES: 60
    ports:
      - ${L2GETH_HTTP_PORT:-8549}:8545
      - ${L2GETH_WS_PORT:-8550}:8546

  integration_tests:
    image: omgx/integration-tests:latest
    deploy:
       replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.integration-tests
    entrypoint: ./integration-tests.sh
    environment:
      L1_URL: http://l1_chain:8545
      L2_URL: http://l2geth:8545
      URL: http://deployer:8081/addresses.json
      ENABLE_GAS_REPORT: 1
      NO_NETWORK: 1
# and, tests for all the OMGX-specific services

  omgx_test_contracts:
    image: omgx/builder
    deploy:
       replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.monorepo
    entrypoint:
      - "/bin/sh"
      - -ecx
      - |
        cd /optimism/packages/omgx/contracts
        yarn test:integration
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:8545
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://deployer:8081/addresses.json
      OMGX_URL: http://omgx_deployer:8079/addresses.json
      TEST_PRIVATE_KEY_1: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      TEST_PRIVATE_KEY_2: "0x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba"
      TEST_PRIVATE_KEY_3: "0x92db14e403b83dfe3df233f83dfa3a0d7096f21ca9b0d6d6b8d88b2b4ec1564e"

  omgx_test_relayer:
    image: omgx/builder
    deploy:
       replicas: 0
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.monorepo
    entrypoint:
      - "/bin/sh"
      - -ecx
      - |
        cd /optimism/packages/omgx/message-relayer-fast
        yarn test:integration
    environment:
      L1_NODE_WEB3_URL: http://l1_chain:8545
      L2_NODE_WEB3_URL: http://l2geth:8545
      URL: http://deployer:8081/addresses.json
      OMGX_URL: http://omgx_deployer:8079/addresses.json
      TEST_PRIVATE_KEY_1: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      TEST_PRIVATE_KEY_2: "0x8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba"
      TEST_PRIVATE_KEY_3: "0x92db14e403b83dfe3df233f83dfa3a0d7096f21ca9b0d6d6b8d88b2b4ec1564e"

# gas price system

  gas_oracle:
    depends_on:
      - l1_chain
      - l2geth
    image: omgx/omgx_gas-price-oracle
    build:
      context: ..
      dockerfile: ./ops/docker/Dockerfile.omgx_gas-price-oracle
    environment:
      #GAS_PRICE_ORACLE_ETHEREUM_HTTP_URL: http://l2geth:8545 # Defined in the upstream ethereum-optimism .yml file
      L1_NODE_WEB3_URL: http://l1_chain:8545
      L2_NODE_WEB3_URL: http://l2geth:8545
      GAS_PRICE_ORACLE_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      GAS_PRICE_ORACLE_ADDRESS: "0x420000000000000000000000000000000000000F"
      DEPLOYER_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
      SEQUENCER_PRIVATE_KEY: "0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d"
      PROPOSER_PRIVATE_KEY: "0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a"
      RELAYER_PRIVATE_KEY: "0xdbda1821b80551c9d65939329250298aa3472ba22feea921c0cf5d620ea67b97"
      FAST_RELAYER_PRIVATE_KEY: "0xde9be858da4a475276426320d5e9262ecfc3ba460bfac56360bfa6c4c28b4ee0"
      GAS_PRICE_ORACLE_FLOOR_PRICE:
      GAS_PRICE_ORACLE_ROOF_PRICE:
      GAS_PRICE_ORACLE_MIN_PERCENT_CHANGE:
      POLLING_INTERVAL:
      ETHERSCAN_API:
      RETRIES: 70
