{
  "address": "0xeb200d5b4E513f506650Bf6E258090530a7C6E12",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x32183ec5f120f937549bf0f3df6284038ae09cb16cee5fcca73388f34be5d736",
  "receipt": {
    "to": null,
    "from": "0x21A235cf690798ee052f54888297Ad8F46D3F389",
    "contractAddress": "0xeb200d5b4E513f506650Bf6E258090530a7C6E12",
    "transactionIndex": 0,
    "gasUsed": "2302575",
    "logsBloom": "0x
    "blockHash": "0x33c88ba95a9a25ebaa4c18dc407dbbd854e203e1a6dbcdc4076b4522d922daab",
    "transactionHash": "0x32183ec5f120f937549bf0f3df6284038ae09cb16cee5fcca73388f34be5d736",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 10719,
        "transactionHash": "0x32183ec5f120f937549bf0f3df6284038ae09cb16cee5fcca73388f34be5d736",
        "address": "0x4200000000000000000000000000000000000006",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x00000000000000000000000021a235cf690798ee052f54888297ad8f46d3f389",
          "0x0000000000000000000000004200000000000000000000000000000000000011"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000704777820a80",
        "logIndex": 0,
        "blockHash": "0x33c88ba95a9a25ebaa4c18dc407dbbd854e203e1a6dbcdc4076b4522d922daab"
      }
    ],
    "blockNumber": 10719,
    "cumulativeGasUsed": "2302575",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1000000,
    "My Optimistic Token"
  ],
  "solcInputHash": "a4e2764a77fec30ccb674d800c46e436",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+ovm+commit.aff196a1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A super simple ERC20 implementation!\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"_owner\":\"Address of the account to check an allowance from.\",\"_spender\":\"Address of the account trying to spend from the owner.\"},\"returns\":{\"_0\":\"Allowance for the spender from the owner.\"}},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"Amount to allow the account to spend from your account.\",\"_spender\":\"Account to approve a balance for.\"},\"returns\":{\"_0\":\"true if the allowance was successful.\"}},\"balanceOf(address)\":{\"params\":{\"_owner\":\"Address to check a balance for.\"},\"returns\":{\"_0\":\"Balance of the address.\"}},\"constructor\":{\"params\":{\"_initialSupply\":\"Initial maximum token supply.\",\"_name\":\"A name for our ERC20 (technically optional, but it's fun ok jeez).\"}},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"Amount to transfer to the other account.\",\"_to\":\"Address to transfer a balance to.\"},\"returns\":{\"_0\":\"true if the transfer was successful.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"Amount to transfer to the other account.\",\"_from\":\"Account to transfer a balance from.\",\"_to\":\"Account to transfer a balance to.\"},\"returns\":{\"_0\":\"true if the transfer was successful.\"}}},\"title\":\"ERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Checks how much a given account is allowed to spend from another given account.\"},\"approve(address,uint256)\":{\"notice\":\"Approves an account to spend some amount from your account.\"},\"balanceOf(address)\":{\"notice\":\"Checks the balance of an address.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers a balance from your account to someone else's account!\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers a balance from someone else's account to another account. You need an allowance from the sending account for this to work!\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >0.6.0 <0.8.0;\\n\\n/**\\n * @title ERC20\\n * @dev A super simple ERC20 implementation!\\n */\\ncontract ERC20 {\\n\\n    /**********\\n     * Events *\\n     **********/\\n\\n    event Transfer(\\n        address indexed _from,\\n        address indexed _to,\\n        uint256 _value\\n    );\\n\\n    event Approval(\\n        address indexed _owner,\\n        address indexed _spender,\\n        uint256 _value\\n    );\\n\\n\\n    /*************\\n     * Variables *\\n     *************/\\n\\n    mapping (address => uint256) public balances;\\n    mapping (address => mapping (address => uint256)) public allowances;\\n\\n    // Some optional extra goodies.\\n    uint256 public totalSupply;\\n    string public name;\\n\\n\\n    /***************\\n     * Constructor *\\n     ***************/\\n\\n    /**\\n     * @param _initialSupply Initial maximum token supply.\\n     * @param _name A name for our ERC20 (technically optional, but it's fun ok jeez).\\n     */\\n    constructor(\\n        uint256 _initialSupply,\\n        string memory _name\\n    )\\n        public\\n    {\\n        balances[msg.sender] = _initialSupply;\\n        totalSupply = _initialSupply;\\n        name = _name;\\n    }\\n\\n\\n    /********************\\n     * Public Functions *\\n     ********************/\\n\\n    /**\\n     * Checks the balance of an address.\\n     * @param _owner Address to check a balance for.\\n     * @return Balance of the address.\\n     */\\n    function balanceOf(\\n        address _owner\\n    )\\n        external\\n        view\\n        returns (\\n            uint256\\n        )\\n    {\\n        return balances[_owner];\\n    }\\n\\n    /**\\n     * Transfers a balance from your account to someone else's account!\\n     * @param _to Address to transfer a balance to.\\n     * @param _amount Amount to transfer to the other account.\\n     * @return true if the transfer was successful.\\n     */\\n    function transfer(\\n        address _to,\\n        uint256 _amount\\n    )\\n        external\\n        returns (\\n            bool\\n        )\\n    {\\n        require(\\n            balances[msg.sender] >= _amount,\\n            \\\"You don't have enough balance to make this transfer!\\\"\\n        );\\n\\n        balances[msg.sender] -= _amount;\\n        balances[_to] += _amount;\\n\\n        emit Transfer(\\n            msg.sender,\\n            _to,\\n            _amount\\n        );\\n\\n        return true;\\n    }\\n\\n    /**\\n     * Transfers a balance from someone else's account to another account. You need an allowance\\n     * from the sending account for this to work!\\n     * @param _from Account to transfer a balance from.\\n     * @param _to Account to transfer a balance to.\\n     * @param _amount Amount to transfer to the other account.\\n     * @return true if the transfer was successful.\\n     */\\n    function transferFrom(\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    )\\n        external\\n        returns (\\n            bool\\n        )\\n    {\\n        require(\\n            balances[_from] >= _amount,\\n            \\\"Can't transfer from the desired account because it doesn't have enough balance.\\\"\\n        );\\n\\n        require(\\n            allowances[_from][msg.sender] >= _amount,\\n            \\\"Can't transfer from the desired account because you don't have enough of an allowance.\\\"\\n        );\\n\\n        balances[_to] += _amount;\\n        balances[_from] -= _amount;\\n\\n        emit Transfer(\\n            _from,\\n            _to,\\n            _amount\\n        );\\n\\n        return true;\\n    }\\n\\n    /**\\n     * Approves an account to spend some amount from your account.\\n     * @param _spender Account to approve a balance for.\\n     * @param _amount Amount to allow the account to spend from your account.\\n     * @return true if the allowance was successful.\\n     */\\n    function approve(\\n        address _spender,\\n        uint256 _amount\\n    )\\n        external\\n        returns (\\n            bool\\n        )\\n    {\\n        allowances[msg.sender][_spender] = _amount;\\n\\n        emit Approval(\\n            msg.sender,\\n            _spender,\\n            _amount\\n        );\\n\\n        return true;\\n    }\\n\\n    /**\\n     * Checks how much a given account is allowed to spend from another given account.\\n     * @param _owner Address of the account to check an allowance from.\\n     * @param _spender Address of the account trying to spend from the owner.\\n     * @return Allowance for the spender from the owner.\\n     */\\n    function allowance(\\n        address _owner,\\n        address _spender\\n    )\\n        external\\n        view\\n        returns (\\n            uint256\\n        )\\n    {\\n        return allowances[_owner][_spender];\\n    }\\n}\\n\",\"keccak256\":\"0x5c76dbdcd208a53d57d8f7afa0061e54cd83157cf7d0e57be8ed914d0018283c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001c5760008062000019620001c4565b50505b50604051620012e8380380620012e8833981810160405260408110156200004d576000806200004a620001c4565b50505b810190808051906020019092919080516040519392919084640100000000821115620000835760008062000080620001c4565b50505b83820191506020820185811115620000a557600080620000a2620001c4565b50505b8251866001820283011164010000000082111715620000ce57600080620000cb620001c4565b50505b8083526020830192505050908051906020019080838360005b8381101562000104578082015181840152602081019050620000e7565b50505050905090810190601f168015620001325780820380516001836020036101000a031916815260200191505b50604052505050816000805a6200014862000234565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081906200018e62000293565b5050508160028190620001a062000293565b5050508060039080519060200190620001bb929190620002fa565b50505062000455565b632a2a7adb598160e01b8152600481016020815285602082015260005b8681101562000201578086015181604084010152602081019050620001e1565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b60408110156200028e5760008183015260208101905062000272565b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b60005b6040811015620002f557600081830152602081019050620002d9565b505050565b828062000306620003c6565b600181600116156101000203166002900490600052602060002090601f01602090048101928262000346576000856200033e62000293565b5050620003b3565b82601f106200036c57805160ff191683800117856200036462000293565b5050620003b3565b828001600101856200037d62000293565b50508215620003b3579182015b82811115620003b257825182620003a062000293565b5050916020019190600101906200038a565b5b509050620003c291906200042b565b5090565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b604081101562000426576000818301526020810190506200040a565b505050565b5b8082111562000451576000816000906200044562000293565b5050506001016200042c565b5090565b610e8380620004656000396000f3fe608060405234801561001957600080610016610c16565b50505b506004361061009c5760003560e01c806327e235e31161006f57806327e235e31461024557806355b6ed5c146102a657806370a0823114610327578063a9059cbb14610388578063dd62ed3e146103f55761009c565b806306fdde03146100aa578063095ea7b31461012d57806318160ddd1461019a57806323b872dd146101b8575b6000806100a7610c16565b50505b6100b2610476565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f25780820151818401526020810190506100d7565b50505050905090810190601f16801561011f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101826004803603604081101561014c57600080610149610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610530565b60405180821515815260200191505060405180910390f35b6101a261063b565b6040518082815260200191505060405180910390f35b61022d600480360360608110156101d7576000806101d4610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610648565b60405180821515815260200191505060405180910390f35b6102906004803603602081101561026457600080610261610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610906565b6040518082815260200191505060405180910390f35b610311600480360360408110156102c5576000806102c2610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610925565b6040518082815260200191505060405180910390f35b6103726004803603602081101561034657600080610343610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610951565b6040518082815260200191505060405180910390f35b6103dd600480360360408110156103a7576000806103a4610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109a0565b60405180821515815260200191505060405180910390f35b6104606004803603604081101561041457600080610411610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b88565b6040518082815260200191505060405180910390f35b600380610481610c84565b600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182806104bc610c84565b600181600116156101000203166002900480156105285780601f106104f65761010080836104e8610c84565b040283529160200191610528565b820191906000526020600020905b8161050d610c84565b8152906001019060200180831161050457829003601f168201915b505050505081565b600081600160005a610540610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081906105c1610d44565b5050508273ffffffffffffffffffffffffffffffffffffffff165a6105e4610ce7565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6002610645610c84565b81565b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610691610c84565b10156106f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604f815260200180610e00604f9139606001915050604051809103906106ee610c16565b50505b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005a61073c610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061077e610c84565b10156107de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526056815260200180610daa60569139606001915050604051809103906107db610c16565b50505b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282610829610c84565b019250508190610837610d44565b505050816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282610885610c84565b039250508190610893610d44565b5050508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000602052806000526040600020600091509050610922610c84565b81565b60016020528160005260406000206020528060005260406000206000915091505061094e610c84565b81565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610999610c84565b9050919050565b6000816000805a6109af610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206109f1610c84565b1015610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180610e4f6034913960400191505060405180910390610a4e610c16565b50505b816000805a610a5e610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282610aa4610c84565b039250508190610ab2610d44565b505050816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282610b00610c84565b019250508190610b0e610d44565b5050508273ffffffffffffffffffffffffffffffffffffffff165a610b31610ce7565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610c0e610c84565b905092915050565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015610c51578086015181604084010152602081019050610c33565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b6040811015610ce257600081830152602081019050610cc8565b505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b6040811015610d3f57600081830152602081019050610d25565b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b60005b6040811015610da457600081830152602081019050610d8a565b50505056fe43616e2774207472616e736665722066726f6d207468652064657369726564206163636f756e74206265636175736520796f7520646f6e2774206861766520656e6f756768206f6620616e20616c6c6f77616e63652e43616e2774207472616e736665722066726f6d207468652064657369726564206163636f756e74206265636175736520697420646f65736e2774206861766520656e6f7567682062616c616e63652e596f7520646f6e2774206861766520656e6f7567682062616c616e636520746f206d616b652074686973207472616e7366657221",
  "deployedBytecode": "0x608060405234801561001957600080610016610c16565b50505b506004361061009c5760003560e01c806327e235e31161006f57806327e235e31461024557806355b6ed5c146102a657806370a0823114610327578063a9059cbb14610388578063dd62ed3e146103f55761009c565b806306fdde03146100aa578063095ea7b31461012d57806318160ddd1461019a57806323b872dd146101b8575b6000806100a7610c16565b50505b6100b2610476565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f25780820151818401526020810190506100d7565b50505050905090810190601f16801561011f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101826004803603604081101561014c57600080610149610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610530565b60405180821515815260200191505060405180910390f35b6101a261063b565b6040518082815260200191505060405180910390f35b61022d600480360360608110156101d7576000806101d4610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610648565b60405180821515815260200191505060405180910390f35b6102906004803603602081101561026457600080610261610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610906565b6040518082815260200191505060405180910390f35b610311600480360360408110156102c5576000806102c2610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610925565b6040518082815260200191505060405180910390f35b6103726004803603602081101561034657600080610343610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610951565b6040518082815260200191505060405180910390f35b6103dd600480360360408110156103a7576000806103a4610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109a0565b60405180821515815260200191505060405180910390f35b6104606004803603604081101561041457600080610411610c16565b50505b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b88565b6040518082815260200191505060405180910390f35b600380610481610c84565b600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182806104bc610c84565b600181600116156101000203166002900480156105285780601f106104f65761010080836104e8610c84565b040283529160200191610528565b820191906000526020600020905b8161050d610c84565b8152906001019060200180831161050457829003601f168201915b505050505081565b600081600160005a610540610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081906105c1610d44565b5050508273ffffffffffffffffffffffffffffffffffffffff165a6105e4610ce7565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6002610645610c84565b81565b6000816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610691610c84565b10156106f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604f815260200180610e00604f9139606001915050604051809103906106ee610c16565b50505b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005a61073c610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061077e610c84565b10156107de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526056815260200180610daa60569139606001915050604051809103906107db610c16565b50505b816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282610829610c84565b019250508190610837610d44565b505050816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282610885610c84565b039250508190610893610d44565b5050508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b6000602052806000526040600020600091509050610922610c84565b81565b60016020528160005260406000206020528060005260406000206000915091505061094e610c84565b81565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610999610c84565b9050919050565b6000816000805a6109af610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206109f1610c84565b1015610a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180610e4f6034913960400191505060405180910390610a4e610c16565b50505b816000805a610a5e610ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282610aa4610c84565b039250508190610ab2610d44565b505050816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282610b00610c84565b019250508190610b0e610d44565b5050508273ffffffffffffffffffffffffffffffffffffffff165a610b31610ce7565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610c0e610c84565b905092915050565b632a2a7adb598160e01b8152600481016020815285602082015260005b86811015610c51578086015181604084010152602081019050610c33565b506020828760640184336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b505050565b6303daa959598160e01b8152836004820152602081602483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b6040811015610ce257600081830152602081019050610cc8565b505050565b6373509064598160e01b8152602081600483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b8051935060005b6040811015610d3f57600081830152602081019050610d25565b505050565b6322bd64c0598160e01b8152836004820152846024820152600081604483336000905af158600e01573d6000803e3d6000fd5b3d6001141558600a015760016000f35b60005b6040811015610da457600081830152602081019050610d8a565b50505056fe43616e2774207472616e736665722066726f6d207468652064657369726564206163636f756e74206265636175736520796f7520646f6e2774206861766520656e6f756768206f6620616e20616c6c6f77616e63652e43616e2774207472616e736665722066726f6d207468652064657369726564206163636f756e74206265636175736520697420646f65736e2774206861766520656e6f7567682062616c616e63652e596f7520646f6e2774206861766520656e6f7567682062616c616e636520746f206d616b652074686973207472616e7366657221",
  "devdoc": {
    "details": "A super simple ERC20 implementation!",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "params": {
          "_owner": "Address of the account to check an allowance from.",
          "_spender": "Address of the account trying to spend from the owner."
        },
        "returns": {
          "_0": "Allowance for the spender from the owner."
        }
      },
      "approve(address,uint256)": {
        "params": {
          "_amount": "Amount to allow the account to spend from your account.",
          "_spender": "Account to approve a balance for."
        },
        "returns": {
          "_0": "true if the allowance was successful."
        }
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "Address to check a balance for."
        },
        "returns": {
          "_0": "Balance of the address."
        }
      },
      "constructor": {
        "params": {
          "_initialSupply": "Initial maximum token supply.",
          "_name": "A name for our ERC20 (technically optional, but it's fun ok jeez)."
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "_amount": "Amount to transfer to the other account.",
          "_to": "Address to transfer a balance to."
        },
        "returns": {
          "_0": "true if the transfer was successful."
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_amount": "Amount to transfer to the other account.",
          "_from": "Account to transfer a balance from.",
          "_to": "Account to transfer a balance to."
        },
        "returns": {
          "_0": "true if the transfer was successful."
        }
      }
    },
    "title": "ERC20",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allowance(address,address)": {
        "notice": "Checks how much a given account is allowed to spend from another given account."
      },
      "approve(address,uint256)": {
        "notice": "Approves an account to spend some amount from your account."
      },
      "balanceOf(address)": {
        "notice": "Checks the balance of an address."
      },
      "transfer(address,uint256)": {
        "notice": "Transfers a balance from your account to someone else's account!"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfers a balance from someone else's account to another account. You need an allowance from the sending account for this to work!"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/ERC20.sol:ERC20",
        "label": "balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 28,
        "contract": "contracts/ERC20.sol:ERC20",
        "label": "allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 30,
        "contract": "contracts/ERC20.sol:ERC20",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 32,
        "contract": "contracts/ERC20.sol:ERC20",
        "label": "name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}